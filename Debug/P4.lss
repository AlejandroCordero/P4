
P4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800200  0000082a  000008be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000082a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  0080020c  0080020c  000008ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  0000093c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f53  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d00  00000000  00000000  000018df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004af  00000000  00000000  000025df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  00002a90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000627  00000000  00000000  00002bac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000037d  00000000  00000000  000031d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00003550  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	63 c1       	rjmp	.+710    	; 0x2cc <__vector_1>
   6:	00 00       	nop
   8:	7e c1       	rjmp	.+764    	; 0x306 <__vector_2>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	99 c1       	rjmp	.+818    	; 0x388 <__vector_21>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e2       	ldi	r30, 0x2A	; 42
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 30       	cpi	r26, 0x0C	; 12
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ac e0       	ldi	r26, 0x0C	; 12
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a5 31       	cpi	r26, 0x15	; 21
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	90 d0       	rcall	.+288    	; 0x240 <main>
 120:	82 c3       	rjmp	.+1796   	; 0x826 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <Timer_Setup>:
    0b11111111, 0b11110011};
const uint8_t* pDisplayCC = DisplayCC;

void Timer_Setup()
{
	TCCR0A = (1<<WGM01)|(1<<COM0A1);							// WMG01 is set as 1 to make TIMERA work in CTC. OCR0A is set (to zero) at compare match
 124:	82 e8       	ldi	r24, 0x82	; 130
 126:	84 bd       	out	0x24, r24	; 36
	TIMSK0 = (1<<OCIE0A);										// Interrupt mask disabled for compare to match OCR0A.
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
	OCR0A=MaxVal;												// MaxVal=128. OCR0A is the register used to compare TCNT0 counter register.
 12e:	80 e8       	ldi	r24, 0x80	; 128
 130:	87 bd       	out	0x27, r24	; 39
 132:	08 95       	ret

00000134 <System_Init>:
}

void System_Init()
{
	DDRA = (1<<PA7)|(1<<PA6)|(1<<PA5);							// Digital pins 29 to 27 are set as outputs (1) to multiplex display's GND
 134:	80 ee       	ldi	r24, 0xE0	; 224
 136:	81 b9       	out	0x01, r24	; 1
	DDRD &= ~(1<<PD1)|(1<<PD0);									// Digital pins 21 and 20 (PD0 and PD1) are set as input (0)
 138:	8a b1       	in	r24, 0x0a	; 10
 13a:	8d 7f       	andi	r24, 0xFD	; 253
 13c:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0xFF;												// C ports (digital pins 37 to 30) are set as outputs (1)
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	87 b9       	out	0x07, r24	; 7
	EICRA = (1<<ISC11)|(1<<ISC10)|(1<<ISC01)|(1<<ISC00);		// Rising edge of INT0 and INT1 generate an interrupt request
 142:	8f e0       	ldi	r24, 0x0F	; 15
 144:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	EIMSK = (1<<INT1)|(1<<INT0);								// Interrupt mask for INT0 and INT1 disabled
 148:	83 e0       	ldi	r24, 0x03	; 3
 14a:	8d bb       	out	0x1d, r24	; 29
 14c:	08 95       	ret

0000014e <Led_Output>:
}

void Led_Output(float input)
{
 14e:	cf 92       	push	r12
 150:	df 92       	push	r13
 152:	ef 92       	push	r14
 154:	ff 92       	push	r15
 156:	cf 93       	push	r28
 158:	df 93       	push	r29
 15a:	6b 01       	movw	r12, r22
 15c:	7c 01       	movw	r14, r24
	uint8_t decimal=input, tens=input/10, units, pdecimal= 0b01111111;
 15e:	1e d2       	rcall	.+1084   	; 0x59c <__fixunssfsi>
 160:	d6 2f       	mov	r29, r22
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	40 e2       	ldi	r20, 0x20	; 32
 168:	51 e4       	ldi	r21, 0x41	; 65
 16a:	c7 01       	movw	r24, r14
 16c:	b6 01       	movw	r22, r12
 16e:	ae d1       	rcall	.+860    	; 0x4cc <__divsf3>
 170:	15 d2       	rcall	.+1066   	; 0x59c <__fixunssfsi>
 172:	c6 2f       	mov	r28, r22
	decimal=10*(input-decimal);
 174:	6d 2f       	mov	r22, r29
 176:	70 e0       	ldi	r23, 0x00	; 0
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	3d d2       	rcall	.+1146   	; 0x5f8 <__floatsisf>
 17e:	9b 01       	movw	r18, r22
 180:	ac 01       	movw	r20, r24
 182:	c7 01       	movw	r24, r14
 184:	b6 01       	movw	r22, r12
 186:	3d d1       	rcall	.+634    	; 0x402 <__subsf3>
 188:	20 e0       	ldi	r18, 0x00	; 0
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	40 e2       	ldi	r20, 0x20	; 32
 18e:	51 e4       	ldi	r21, 0x41	; 65
 190:	c3 d2       	rcall	.+1414   	; 0x718 <__mulsf3>
 192:	04 d2       	rcall	.+1032   	; 0x59c <__fixunssfsi>
 194:	d6 2f       	mov	r29, r22
	units=input-10*tens;
 196:	8c 2f       	mov	r24, r28
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	bc 01       	movw	r22, r24
 19c:	66 0f       	add	r22, r22
 19e:	77 1f       	adc	r23, r23
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	68 0f       	add	r22, r24
 1ae:	79 1f       	adc	r23, r25
 1b0:	07 2e       	mov	r0, r23
 1b2:	00 0c       	add	r0, r0
 1b4:	88 0b       	sbc	r24, r24
 1b6:	99 0b       	sbc	r25, r25
 1b8:	1f d2       	rcall	.+1086   	; 0x5f8 <__floatsisf>
 1ba:	9b 01       	movw	r18, r22
 1bc:	ac 01       	movw	r20, r24
 1be:	c7 01       	movw	r24, r14
 1c0:	b6 01       	movw	r22, r12
 1c2:	1f d1       	rcall	.+574    	; 0x402 <__subsf3>
 1c4:	eb d1       	rcall	.+982    	; 0x59c <__fixunssfsi>
	
	// Decimal digit output
	PORTA=0b01111111;
 1c6:	8f e7       	ldi	r24, 0x7F	; 127
 1c8:	82 b9       	out	0x02, r24	; 2
	PORTC=(*(pDisplayCC+decimal) & pdecimal);
 1ca:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 1ce:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 1d2:	ed 0f       	add	r30, r29
 1d4:	f1 1d       	adc	r31, r1
 1d6:	80 81       	ld	r24, Z
 1d8:	8f 77       	andi	r24, 0x7F	; 127
 1da:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1dc:	8f e9       	ldi	r24, 0x9F	; 159
 1de:	9f e0       	ldi	r25, 0x0F	; 15
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <Led_Output+0x92>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <Led_Output+0x98>
 1e6:	00 00       	nop
	_delay_ms(1);

	PORTC=0b00000000;
 1e8:	18 b8       	out	0x08, r1	; 8
	// Unit digit output
	PORTA=0b10111111;
 1ea:	8f eb       	ldi	r24, 0xBF	; 191
 1ec:	82 b9       	out	0x02, r24	; 2
	PORTC=*(pDisplayCC+units);
 1ee:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 1f2:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 1f6:	e6 0f       	add	r30, r22
 1f8:	f1 1d       	adc	r31, r1
 1fa:	80 81       	ld	r24, Z
 1fc:	88 b9       	out	0x08, r24	; 8
 1fe:	8f e9       	ldi	r24, 0x9F	; 159
 200:	9f e0       	ldi	r25, 0x0F	; 15
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <Led_Output+0xb4>
 206:	00 c0       	rjmp	.+0      	; 0x208 <Led_Output+0xba>
 208:	00 00       	nop
	_delay_ms(1);

	if (tens>0)
 20a:	cc 23       	and	r28, r28
 20c:	61 f0       	breq	.+24     	; 0x226 <Led_Output+0xd8>
	{
		PORTC=0b00000000;
 20e:	18 b8       	out	0x08, r1	; 8
		// Tens digit output
		PORTA=0b11011111;
 210:	8f ed       	ldi	r24, 0xDF	; 223
 212:	82 b9       	out	0x02, r24	; 2
		PORTC=(*(pDisplayCC+tens) & pdecimal);
 214:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 218:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 21c:	ec 0f       	add	r30, r28
 21e:	f1 1d       	adc	r31, r1
 220:	80 81       	ld	r24, Z
 222:	8f 77       	andi	r24, 0x7F	; 127
 224:	88 b9       	out	0x08, r24	; 8
 226:	8f e9       	ldi	r24, 0x9F	; 159
 228:	9f e0       	ldi	r25, 0x0F	; 15
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <Led_Output+0xdc>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <Led_Output+0xe2>
 230:	00 00       	nop
	}
	_delay_ms(1);
}
 232:	df 91       	pop	r29
 234:	cf 91       	pop	r28
 236:	ff 90       	pop	r15
 238:	ef 90       	pop	r14
 23a:	df 90       	pop	r13
 23c:	cf 90       	pop	r12
 23e:	08 95       	ret

00000240 <main>:

int main(void)
{
	System_Init();
 240:	79 df       	rcall	.-270    	; 0x134 <System_Init>
	Timer_Setup();
 242:	70 df       	rcall	.-288    	; 0x124 <Timer_Setup>
 244:	78 94       	sei
	sei();
 246:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <fsmState>
	
	while (1) 
	{
		if ((fsmState==start) | (fsmState==lap))
 24a:	20 91 14 02 	lds	r18, 0x0214	; 0x800214 <fsmState>
 24e:	91 e0       	ldi	r25, 0x01	; 1
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	09 f0       	breq	.+2      	; 0x256 <main+0x16>
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	23 30       	cpi	r18, 0x03	; 3
 25a:	09 f0       	breq	.+2      	; 0x25e <main+0x1e>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	89 2b       	or	r24, r25
 260:	91 f3       	breq	.-28     	; 0x246 <main+0x6>
 262:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <counter>
		{
			counter=counter+0.1;
 266:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <counter+0x1>
 26a:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <counter+0x2>
 26e:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <counter+0x3>
 272:	2d ec       	ldi	r18, 0xCD	; 205
 274:	3c ec       	ldi	r19, 0xCC	; 204
 276:	4c ec       	ldi	r20, 0xCC	; 204
 278:	5d e3       	ldi	r21, 0x3D	; 61
 27a:	c4 d0       	rcall	.+392    	; 0x404 <__addsf3>
 27c:	60 93 10 02 	sts	0x0210, r22	; 0x800210 <counter>
 280:	70 93 11 02 	sts	0x0211, r23	; 0x800211 <counter+0x1>
 284:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <counter+0x2>
 288:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <counter+0x3>
 28c:	2c e6       	ldi	r18, 0x6C	; 108
 28e:	8c e0       	ldi	r24, 0x0C	; 12
 290:	93 e0       	ldi	r25, 0x03	; 3
 292:	21 50       	subi	r18, 0x01	; 1
 294:	80 40       	sbci	r24, 0x00	; 0
 296:	90 40       	sbci	r25, 0x00	; 0
 298:	e1 f7       	brne	.-8      	; 0x292 <main+0x52>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <main+0x5c>
 29c:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <counter>
			_delay_ms(ExperimentalDelay);						// Delay to sync the counter.
			if (counter>=60.0)
 2a0:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <counter+0x1>
 2a4:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <counter+0x2>
 2a8:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <counter+0x3>
 2ac:	20 e0       	ldi	r18, 0x00	; 0
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	40 e7       	ldi	r20, 0x70	; 112
 2b2:	52 e4       	ldi	r21, 0x42	; 66
 2b4:	2d d2       	rcall	.+1114   	; 0x710 <__gesf2>
 2b6:	88 23       	and	r24, r24
 2b8:	34 f2       	brlt	.-116    	; 0x246 <main+0x6>
 2ba:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <counter>
			{
				counter=0;
 2be:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <counter+0x1>
 2c2:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <counter+0x2>
 2c6:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <counter+0x3>
 2ca:	bd cf       	rjmp	.-134    	; 0x246 <main+0x6>

000002cc <__vector_1>:
 2cc:	1f 92       	push	r1
		}
	}
}

ISR(INT0_vect)
{
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	8f 93       	push	r24
	if(fsmState==zero)
 2d8:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <fsmState>
 2dc:	81 11       	cpse	r24, r1
 2de:	06 c0       	rjmp	.+12     	; 0x2ec <__vector_1+0x20>
	{
		fsmState=start;
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <fsmState>
		TCCR0B = (1<<CS02)|(1<<CS00);							// Prescaler=1024, counter starts
 2e6:	85 e0       	ldi	r24, 0x05	; 5
 2e8:	85 bd       	out	0x25, r24	; 37
 2ea:	07 c0       	rjmp	.+14     	; 0x2fa <__vector_1+0x2e>
	}																
	else
	{
		if (fsmState==start)
 2ec:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <fsmState>
 2f0:	81 30       	cpi	r24, 0x01	; 1
 2f2:	19 f4       	brne	.+6      	; 0x2fa <__vector_1+0x2e>
		{
			fsmState=stop;
 2f4:	82 e0       	ldi	r24, 0x02	; 2
 2f6:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <fsmState>
		}
	}
}
 2fa:	8f 91       	pop	r24
 2fc:	0f 90       	pop	r0
 2fe:	0f be       	out	0x3f, r0	; 63
 300:	0f 90       	pop	r0
 302:	1f 90       	pop	r1
 304:	18 95       	reti

00000306 <__vector_2>:

ISR(INT1_vect)
{
 306:	1f 92       	push	r1
 308:	0f 92       	push	r0
 30a:	0f b6       	in	r0, 0x3f	; 63
 30c:	0f 92       	push	r0
 30e:	11 24       	eor	r1, r1
 310:	8f 93       	push	r24
 312:	9f 93       	push	r25
 314:	af 93       	push	r26
 316:	bf 93       	push	r27
	if (fsmState==stop)
 318:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <fsmState>
 31c:	82 30       	cpi	r24, 0x02	; 2
 31e:	61 f4       	brne	.+24     	; 0x338 <__vector_2+0x32>
	{
		fsmState=zero;
 320:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <fsmState>
		TCNT0=0x00;
 324:	16 bc       	out	0x26, r1	; 38
		counter=0;
 326:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <counter>
 32a:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <counter+0x1>
 32e:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <counter+0x2>
 332:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <counter+0x3>
 336:	1f c0       	rjmp	.+62     	; 0x376 <__vector_2+0x70>
	}
	else
	{
		if (fsmState==start)
 338:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <fsmState>
 33c:	81 30       	cpi	r24, 0x01	; 1
 33e:	a1 f4       	brne	.+40     	; 0x368 <__vector_2+0x62>
		{
			fsmState=lap;
 340:	83 e0       	ldi	r24, 0x03	; 3
 342:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <fsmState>
			auxcounter=counter;
 346:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <counter>
 34a:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <counter+0x1>
 34e:	a0 91 12 02 	lds	r26, 0x0212	; 0x800212 <counter+0x2>
 352:	b0 91 13 02 	lds	r27, 0x0213	; 0x800213 <counter+0x3>
 356:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <__data_end>
 35a:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <__data_end+0x1>
 35e:	a0 93 0e 02 	sts	0x020E, r26	; 0x80020e <__data_end+0x2>
 362:	b0 93 0f 02 	sts	0x020F, r27	; 0x80020f <__data_end+0x3>
 366:	07 c0       	rjmp	.+14     	; 0x376 <__vector_2+0x70>
		}
		else
		{
			if (fsmState==lap)
 368:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <fsmState>
 36c:	83 30       	cpi	r24, 0x03	; 3
 36e:	19 f4       	brne	.+6      	; 0x376 <__vector_2+0x70>
			{
				fsmState=start;
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <fsmState>
			}
		}
	}
}
 376:	bf 91       	pop	r27
 378:	af 91       	pop	r26
 37a:	9f 91       	pop	r25
 37c:	8f 91       	pop	r24
 37e:	0f 90       	pop	r0
 380:	0f be       	out	0x3f, r0	; 63
 382:	0f 90       	pop	r0
 384:	1f 90       	pop	r1
 386:	18 95       	reti

00000388 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 388:	1f 92       	push	r1
 38a:	0f 92       	push	r0
 38c:	0f b6       	in	r0, 0x3f	; 63
 38e:	0f 92       	push	r0
 390:	11 24       	eor	r1, r1
 392:	0b b6       	in	r0, 0x3b	; 59
 394:	0f 92       	push	r0
 396:	2f 93       	push	r18
 398:	3f 93       	push	r19
 39a:	4f 93       	push	r20
 39c:	5f 93       	push	r21
 39e:	6f 93       	push	r22
 3a0:	7f 93       	push	r23
 3a2:	8f 93       	push	r24
 3a4:	9f 93       	push	r25
 3a6:	af 93       	push	r26
 3a8:	bf 93       	push	r27
 3aa:	ef 93       	push	r30
 3ac:	ff 93       	push	r31
	if (fsmState!=lap)
 3ae:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <fsmState>
 3b2:	83 30       	cpi	r24, 0x03	; 3
 3b4:	51 f0       	breq	.+20     	; 0x3ca <__vector_21+0x42>
	{
		Led_Output(counter);								// Displays actual count
 3b6:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <counter>
 3ba:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <counter+0x1>
 3be:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <counter+0x2>
 3c2:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <counter+0x3>
 3c6:	c3 de       	rcall	.-634    	; 0x14e <Led_Output>
 3c8:	09 c0       	rjmp	.+18     	; 0x3dc <__vector_21+0x54>
	}
	else 
	{
		Led_Output(auxcounter);								// Displays count before lap state
 3ca:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <__data_end>
 3ce:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <__data_end+0x1>
 3d2:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end+0x2>
 3d6:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x3>
 3da:	b9 de       	rcall	.-654    	; 0x14e <Led_Output>
	}
}
 3dc:	ff 91       	pop	r31
 3de:	ef 91       	pop	r30
 3e0:	bf 91       	pop	r27
 3e2:	af 91       	pop	r26
 3e4:	9f 91       	pop	r25
 3e6:	8f 91       	pop	r24
 3e8:	7f 91       	pop	r23
 3ea:	6f 91       	pop	r22
 3ec:	5f 91       	pop	r21
 3ee:	4f 91       	pop	r20
 3f0:	3f 91       	pop	r19
 3f2:	2f 91       	pop	r18
 3f4:	0f 90       	pop	r0
 3f6:	0b be       	out	0x3b, r0	; 59
 3f8:	0f 90       	pop	r0
 3fa:	0f be       	out	0x3f, r0	; 63
 3fc:	0f 90       	pop	r0
 3fe:	1f 90       	pop	r1
 400:	18 95       	reti

00000402 <__subsf3>:
 402:	50 58       	subi	r21, 0x80	; 128

00000404 <__addsf3>:
 404:	bb 27       	eor	r27, r27
 406:	aa 27       	eor	r26, r26
 408:	0e d0       	rcall	.+28     	; 0x426 <__addsf3x>
 40a:	48 c1       	rjmp	.+656    	; 0x69c <__fp_round>
 40c:	39 d1       	rcall	.+626    	; 0x680 <__fp_pscA>
 40e:	30 f0       	brcs	.+12     	; 0x41c <__addsf3+0x18>
 410:	3e d1       	rcall	.+636    	; 0x68e <__fp_pscB>
 412:	20 f0       	brcs	.+8      	; 0x41c <__addsf3+0x18>
 414:	31 f4       	brne	.+12     	; 0x422 <__addsf3+0x1e>
 416:	9f 3f       	cpi	r25, 0xFF	; 255
 418:	11 f4       	brne	.+4      	; 0x41e <__addsf3+0x1a>
 41a:	1e f4       	brtc	.+6      	; 0x422 <__addsf3+0x1e>
 41c:	2e c1       	rjmp	.+604    	; 0x67a <__fp_nan>
 41e:	0e f4       	brtc	.+2      	; 0x422 <__addsf3+0x1e>
 420:	e0 95       	com	r30
 422:	e7 fb       	bst	r30, 7
 424:	24 c1       	rjmp	.+584    	; 0x66e <__fp_inf>

00000426 <__addsf3x>:
 426:	e9 2f       	mov	r30, r25
 428:	4a d1       	rcall	.+660    	; 0x6be <__fp_split3>
 42a:	80 f3       	brcs	.-32     	; 0x40c <__addsf3+0x8>
 42c:	ba 17       	cp	r27, r26
 42e:	62 07       	cpc	r22, r18
 430:	73 07       	cpc	r23, r19
 432:	84 07       	cpc	r24, r20
 434:	95 07       	cpc	r25, r21
 436:	18 f0       	brcs	.+6      	; 0x43e <__addsf3x+0x18>
 438:	71 f4       	brne	.+28     	; 0x456 <__addsf3x+0x30>
 43a:	9e f5       	brtc	.+102    	; 0x4a2 <__addsf3x+0x7c>
 43c:	62 c1       	rjmp	.+708    	; 0x702 <__fp_zero>
 43e:	0e f4       	brtc	.+2      	; 0x442 <__addsf3x+0x1c>
 440:	e0 95       	com	r30
 442:	0b 2e       	mov	r0, r27
 444:	ba 2f       	mov	r27, r26
 446:	a0 2d       	mov	r26, r0
 448:	0b 01       	movw	r0, r22
 44a:	b9 01       	movw	r22, r18
 44c:	90 01       	movw	r18, r0
 44e:	0c 01       	movw	r0, r24
 450:	ca 01       	movw	r24, r20
 452:	a0 01       	movw	r20, r0
 454:	11 24       	eor	r1, r1
 456:	ff 27       	eor	r31, r31
 458:	59 1b       	sub	r21, r25
 45a:	99 f0       	breq	.+38     	; 0x482 <__addsf3x+0x5c>
 45c:	59 3f       	cpi	r21, 0xF9	; 249
 45e:	50 f4       	brcc	.+20     	; 0x474 <__addsf3x+0x4e>
 460:	50 3e       	cpi	r21, 0xE0	; 224
 462:	68 f1       	brcs	.+90     	; 0x4be <__addsf3x+0x98>
 464:	1a 16       	cp	r1, r26
 466:	f0 40       	sbci	r31, 0x00	; 0
 468:	a2 2f       	mov	r26, r18
 46a:	23 2f       	mov	r18, r19
 46c:	34 2f       	mov	r19, r20
 46e:	44 27       	eor	r20, r20
 470:	58 5f       	subi	r21, 0xF8	; 248
 472:	f3 cf       	rjmp	.-26     	; 0x45a <__addsf3x+0x34>
 474:	46 95       	lsr	r20
 476:	37 95       	ror	r19
 478:	27 95       	ror	r18
 47a:	a7 95       	ror	r26
 47c:	f0 40       	sbci	r31, 0x00	; 0
 47e:	53 95       	inc	r21
 480:	c9 f7       	brne	.-14     	; 0x474 <__addsf3x+0x4e>
 482:	7e f4       	brtc	.+30     	; 0x4a2 <__addsf3x+0x7c>
 484:	1f 16       	cp	r1, r31
 486:	ba 0b       	sbc	r27, r26
 488:	62 0b       	sbc	r22, r18
 48a:	73 0b       	sbc	r23, r19
 48c:	84 0b       	sbc	r24, r20
 48e:	ba f0       	brmi	.+46     	; 0x4be <__addsf3x+0x98>
 490:	91 50       	subi	r25, 0x01	; 1
 492:	a1 f0       	breq	.+40     	; 0x4bc <__addsf3x+0x96>
 494:	ff 0f       	add	r31, r31
 496:	bb 1f       	adc	r27, r27
 498:	66 1f       	adc	r22, r22
 49a:	77 1f       	adc	r23, r23
 49c:	88 1f       	adc	r24, r24
 49e:	c2 f7       	brpl	.-16     	; 0x490 <__addsf3x+0x6a>
 4a0:	0e c0       	rjmp	.+28     	; 0x4be <__addsf3x+0x98>
 4a2:	ba 0f       	add	r27, r26
 4a4:	62 1f       	adc	r22, r18
 4a6:	73 1f       	adc	r23, r19
 4a8:	84 1f       	adc	r24, r20
 4aa:	48 f4       	brcc	.+18     	; 0x4be <__addsf3x+0x98>
 4ac:	87 95       	ror	r24
 4ae:	77 95       	ror	r23
 4b0:	67 95       	ror	r22
 4b2:	b7 95       	ror	r27
 4b4:	f7 95       	ror	r31
 4b6:	9e 3f       	cpi	r25, 0xFE	; 254
 4b8:	08 f0       	brcs	.+2      	; 0x4bc <__addsf3x+0x96>
 4ba:	b3 cf       	rjmp	.-154    	; 0x422 <__addsf3+0x1e>
 4bc:	93 95       	inc	r25
 4be:	88 0f       	add	r24, r24
 4c0:	08 f0       	brcs	.+2      	; 0x4c4 <__addsf3x+0x9e>
 4c2:	99 27       	eor	r25, r25
 4c4:	ee 0f       	add	r30, r30
 4c6:	97 95       	ror	r25
 4c8:	87 95       	ror	r24
 4ca:	08 95       	ret

000004cc <__divsf3>:
 4cc:	0c d0       	rcall	.+24     	; 0x4e6 <__divsf3x>
 4ce:	e6 c0       	rjmp	.+460    	; 0x69c <__fp_round>
 4d0:	de d0       	rcall	.+444    	; 0x68e <__fp_pscB>
 4d2:	40 f0       	brcs	.+16     	; 0x4e4 <__divsf3+0x18>
 4d4:	d5 d0       	rcall	.+426    	; 0x680 <__fp_pscA>
 4d6:	30 f0       	brcs	.+12     	; 0x4e4 <__divsf3+0x18>
 4d8:	21 f4       	brne	.+8      	; 0x4e2 <__divsf3+0x16>
 4da:	5f 3f       	cpi	r21, 0xFF	; 255
 4dc:	19 f0       	breq	.+6      	; 0x4e4 <__divsf3+0x18>
 4de:	c7 c0       	rjmp	.+398    	; 0x66e <__fp_inf>
 4e0:	51 11       	cpse	r21, r1
 4e2:	10 c1       	rjmp	.+544    	; 0x704 <__fp_szero>
 4e4:	ca c0       	rjmp	.+404    	; 0x67a <__fp_nan>

000004e6 <__divsf3x>:
 4e6:	eb d0       	rcall	.+470    	; 0x6be <__fp_split3>
 4e8:	98 f3       	brcs	.-26     	; 0x4d0 <__divsf3+0x4>

000004ea <__divsf3_pse>:
 4ea:	99 23       	and	r25, r25
 4ec:	c9 f3       	breq	.-14     	; 0x4e0 <__divsf3+0x14>
 4ee:	55 23       	and	r21, r21
 4f0:	b1 f3       	breq	.-20     	; 0x4de <__divsf3+0x12>
 4f2:	95 1b       	sub	r25, r21
 4f4:	55 0b       	sbc	r21, r21
 4f6:	bb 27       	eor	r27, r27
 4f8:	aa 27       	eor	r26, r26
 4fa:	62 17       	cp	r22, r18
 4fc:	73 07       	cpc	r23, r19
 4fe:	84 07       	cpc	r24, r20
 500:	38 f0       	brcs	.+14     	; 0x510 <__divsf3_pse+0x26>
 502:	9f 5f       	subi	r25, 0xFF	; 255
 504:	5f 4f       	sbci	r21, 0xFF	; 255
 506:	22 0f       	add	r18, r18
 508:	33 1f       	adc	r19, r19
 50a:	44 1f       	adc	r20, r20
 50c:	aa 1f       	adc	r26, r26
 50e:	a9 f3       	breq	.-22     	; 0x4fa <__divsf3_pse+0x10>
 510:	33 d0       	rcall	.+102    	; 0x578 <__divsf3_pse+0x8e>
 512:	0e 2e       	mov	r0, r30
 514:	3a f0       	brmi	.+14     	; 0x524 <__divsf3_pse+0x3a>
 516:	e0 e8       	ldi	r30, 0x80	; 128
 518:	30 d0       	rcall	.+96     	; 0x57a <__divsf3_pse+0x90>
 51a:	91 50       	subi	r25, 0x01	; 1
 51c:	50 40       	sbci	r21, 0x00	; 0
 51e:	e6 95       	lsr	r30
 520:	00 1c       	adc	r0, r0
 522:	ca f7       	brpl	.-14     	; 0x516 <__divsf3_pse+0x2c>
 524:	29 d0       	rcall	.+82     	; 0x578 <__divsf3_pse+0x8e>
 526:	fe 2f       	mov	r31, r30
 528:	27 d0       	rcall	.+78     	; 0x578 <__divsf3_pse+0x8e>
 52a:	66 0f       	add	r22, r22
 52c:	77 1f       	adc	r23, r23
 52e:	88 1f       	adc	r24, r24
 530:	bb 1f       	adc	r27, r27
 532:	26 17       	cp	r18, r22
 534:	37 07       	cpc	r19, r23
 536:	48 07       	cpc	r20, r24
 538:	ab 07       	cpc	r26, r27
 53a:	b0 e8       	ldi	r27, 0x80	; 128
 53c:	09 f0       	breq	.+2      	; 0x540 <__divsf3_pse+0x56>
 53e:	bb 0b       	sbc	r27, r27
 540:	80 2d       	mov	r24, r0
 542:	bf 01       	movw	r22, r30
 544:	ff 27       	eor	r31, r31
 546:	93 58       	subi	r25, 0x83	; 131
 548:	5f 4f       	sbci	r21, 0xFF	; 255
 54a:	2a f0       	brmi	.+10     	; 0x556 <__divsf3_pse+0x6c>
 54c:	9e 3f       	cpi	r25, 0xFE	; 254
 54e:	51 05       	cpc	r21, r1
 550:	68 f0       	brcs	.+26     	; 0x56c <__divsf3_pse+0x82>
 552:	8d c0       	rjmp	.+282    	; 0x66e <__fp_inf>
 554:	d7 c0       	rjmp	.+430    	; 0x704 <__fp_szero>
 556:	5f 3f       	cpi	r21, 0xFF	; 255
 558:	ec f3       	brlt	.-6      	; 0x554 <__divsf3_pse+0x6a>
 55a:	98 3e       	cpi	r25, 0xE8	; 232
 55c:	dc f3       	brlt	.-10     	; 0x554 <__divsf3_pse+0x6a>
 55e:	86 95       	lsr	r24
 560:	77 95       	ror	r23
 562:	67 95       	ror	r22
 564:	b7 95       	ror	r27
 566:	f7 95       	ror	r31
 568:	9f 5f       	subi	r25, 0xFF	; 255
 56a:	c9 f7       	brne	.-14     	; 0x55e <__divsf3_pse+0x74>
 56c:	88 0f       	add	r24, r24
 56e:	91 1d       	adc	r25, r1
 570:	96 95       	lsr	r25
 572:	87 95       	ror	r24
 574:	97 f9       	bld	r25, 7
 576:	08 95       	ret
 578:	e1 e0       	ldi	r30, 0x01	; 1
 57a:	66 0f       	add	r22, r22
 57c:	77 1f       	adc	r23, r23
 57e:	88 1f       	adc	r24, r24
 580:	bb 1f       	adc	r27, r27
 582:	62 17       	cp	r22, r18
 584:	73 07       	cpc	r23, r19
 586:	84 07       	cpc	r24, r20
 588:	ba 07       	cpc	r27, r26
 58a:	20 f0       	brcs	.+8      	; 0x594 <__divsf3_pse+0xaa>
 58c:	62 1b       	sub	r22, r18
 58e:	73 0b       	sbc	r23, r19
 590:	84 0b       	sbc	r24, r20
 592:	ba 0b       	sbc	r27, r26
 594:	ee 1f       	adc	r30, r30
 596:	88 f7       	brcc	.-30     	; 0x57a <__divsf3_pse+0x90>
 598:	e0 95       	com	r30
 59a:	08 95       	ret

0000059c <__fixunssfsi>:
 59c:	98 d0       	rcall	.+304    	; 0x6ce <__fp_splitA>
 59e:	88 f0       	brcs	.+34     	; 0x5c2 <__fixunssfsi+0x26>
 5a0:	9f 57       	subi	r25, 0x7F	; 127
 5a2:	90 f0       	brcs	.+36     	; 0x5c8 <__fixunssfsi+0x2c>
 5a4:	b9 2f       	mov	r27, r25
 5a6:	99 27       	eor	r25, r25
 5a8:	b7 51       	subi	r27, 0x17	; 23
 5aa:	a0 f0       	brcs	.+40     	; 0x5d4 <__fixunssfsi+0x38>
 5ac:	d1 f0       	breq	.+52     	; 0x5e2 <__fixunssfsi+0x46>
 5ae:	66 0f       	add	r22, r22
 5b0:	77 1f       	adc	r23, r23
 5b2:	88 1f       	adc	r24, r24
 5b4:	99 1f       	adc	r25, r25
 5b6:	1a f0       	brmi	.+6      	; 0x5be <__fixunssfsi+0x22>
 5b8:	ba 95       	dec	r27
 5ba:	c9 f7       	brne	.-14     	; 0x5ae <__fixunssfsi+0x12>
 5bc:	12 c0       	rjmp	.+36     	; 0x5e2 <__fixunssfsi+0x46>
 5be:	b1 30       	cpi	r27, 0x01	; 1
 5c0:	81 f0       	breq	.+32     	; 0x5e2 <__fixunssfsi+0x46>
 5c2:	9f d0       	rcall	.+318    	; 0x702 <__fp_zero>
 5c4:	b1 e0       	ldi	r27, 0x01	; 1
 5c6:	08 95       	ret
 5c8:	9c c0       	rjmp	.+312    	; 0x702 <__fp_zero>
 5ca:	67 2f       	mov	r22, r23
 5cc:	78 2f       	mov	r23, r24
 5ce:	88 27       	eor	r24, r24
 5d0:	b8 5f       	subi	r27, 0xF8	; 248
 5d2:	39 f0       	breq	.+14     	; 0x5e2 <__fixunssfsi+0x46>
 5d4:	b9 3f       	cpi	r27, 0xF9	; 249
 5d6:	cc f3       	brlt	.-14     	; 0x5ca <__fixunssfsi+0x2e>
 5d8:	86 95       	lsr	r24
 5da:	77 95       	ror	r23
 5dc:	67 95       	ror	r22
 5de:	b3 95       	inc	r27
 5e0:	d9 f7       	brne	.-10     	; 0x5d8 <__fixunssfsi+0x3c>
 5e2:	3e f4       	brtc	.+14     	; 0x5f2 <__fixunssfsi+0x56>
 5e4:	90 95       	com	r25
 5e6:	80 95       	com	r24
 5e8:	70 95       	com	r23
 5ea:	61 95       	neg	r22
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255
 5ee:	8f 4f       	sbci	r24, 0xFF	; 255
 5f0:	9f 4f       	sbci	r25, 0xFF	; 255
 5f2:	08 95       	ret

000005f4 <__floatunsisf>:
 5f4:	e8 94       	clt
 5f6:	09 c0       	rjmp	.+18     	; 0x60a <__floatsisf+0x12>

000005f8 <__floatsisf>:
 5f8:	97 fb       	bst	r25, 7
 5fa:	3e f4       	brtc	.+14     	; 0x60a <__floatsisf+0x12>
 5fc:	90 95       	com	r25
 5fe:	80 95       	com	r24
 600:	70 95       	com	r23
 602:	61 95       	neg	r22
 604:	7f 4f       	sbci	r23, 0xFF	; 255
 606:	8f 4f       	sbci	r24, 0xFF	; 255
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	99 23       	and	r25, r25
 60c:	a9 f0       	breq	.+42     	; 0x638 <__floatsisf+0x40>
 60e:	f9 2f       	mov	r31, r25
 610:	96 e9       	ldi	r25, 0x96	; 150
 612:	bb 27       	eor	r27, r27
 614:	93 95       	inc	r25
 616:	f6 95       	lsr	r31
 618:	87 95       	ror	r24
 61a:	77 95       	ror	r23
 61c:	67 95       	ror	r22
 61e:	b7 95       	ror	r27
 620:	f1 11       	cpse	r31, r1
 622:	f8 cf       	rjmp	.-16     	; 0x614 <__floatsisf+0x1c>
 624:	fa f4       	brpl	.+62     	; 0x664 <__floatsisf+0x6c>
 626:	bb 0f       	add	r27, r27
 628:	11 f4       	brne	.+4      	; 0x62e <__floatsisf+0x36>
 62a:	60 ff       	sbrs	r22, 0
 62c:	1b c0       	rjmp	.+54     	; 0x664 <__floatsisf+0x6c>
 62e:	6f 5f       	subi	r22, 0xFF	; 255
 630:	7f 4f       	sbci	r23, 0xFF	; 255
 632:	8f 4f       	sbci	r24, 0xFF	; 255
 634:	9f 4f       	sbci	r25, 0xFF	; 255
 636:	16 c0       	rjmp	.+44     	; 0x664 <__floatsisf+0x6c>
 638:	88 23       	and	r24, r24
 63a:	11 f0       	breq	.+4      	; 0x640 <__floatsisf+0x48>
 63c:	96 e9       	ldi	r25, 0x96	; 150
 63e:	11 c0       	rjmp	.+34     	; 0x662 <__floatsisf+0x6a>
 640:	77 23       	and	r23, r23
 642:	21 f0       	breq	.+8      	; 0x64c <__floatsisf+0x54>
 644:	9e e8       	ldi	r25, 0x8E	; 142
 646:	87 2f       	mov	r24, r23
 648:	76 2f       	mov	r23, r22
 64a:	05 c0       	rjmp	.+10     	; 0x656 <__floatsisf+0x5e>
 64c:	66 23       	and	r22, r22
 64e:	71 f0       	breq	.+28     	; 0x66c <__floatsisf+0x74>
 650:	96 e8       	ldi	r25, 0x86	; 134
 652:	86 2f       	mov	r24, r22
 654:	70 e0       	ldi	r23, 0x00	; 0
 656:	60 e0       	ldi	r22, 0x00	; 0
 658:	2a f0       	brmi	.+10     	; 0x664 <__floatsisf+0x6c>
 65a:	9a 95       	dec	r25
 65c:	66 0f       	add	r22, r22
 65e:	77 1f       	adc	r23, r23
 660:	88 1f       	adc	r24, r24
 662:	da f7       	brpl	.-10     	; 0x65a <__floatsisf+0x62>
 664:	88 0f       	add	r24, r24
 666:	96 95       	lsr	r25
 668:	87 95       	ror	r24
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret

0000066e <__fp_inf>:
 66e:	97 f9       	bld	r25, 7
 670:	9f 67       	ori	r25, 0x7F	; 127
 672:	80 e8       	ldi	r24, 0x80	; 128
 674:	70 e0       	ldi	r23, 0x00	; 0
 676:	60 e0       	ldi	r22, 0x00	; 0
 678:	08 95       	ret

0000067a <__fp_nan>:
 67a:	9f ef       	ldi	r25, 0xFF	; 255
 67c:	80 ec       	ldi	r24, 0xC0	; 192
 67e:	08 95       	ret

00000680 <__fp_pscA>:
 680:	00 24       	eor	r0, r0
 682:	0a 94       	dec	r0
 684:	16 16       	cp	r1, r22
 686:	17 06       	cpc	r1, r23
 688:	18 06       	cpc	r1, r24
 68a:	09 06       	cpc	r0, r25
 68c:	08 95       	ret

0000068e <__fp_pscB>:
 68e:	00 24       	eor	r0, r0
 690:	0a 94       	dec	r0
 692:	12 16       	cp	r1, r18
 694:	13 06       	cpc	r1, r19
 696:	14 06       	cpc	r1, r20
 698:	05 06       	cpc	r0, r21
 69a:	08 95       	ret

0000069c <__fp_round>:
 69c:	09 2e       	mov	r0, r25
 69e:	03 94       	inc	r0
 6a0:	00 0c       	add	r0, r0
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <__fp_round+0xc>
 6a4:	88 23       	and	r24, r24
 6a6:	52 f0       	brmi	.+20     	; 0x6bc <__fp_round+0x20>
 6a8:	bb 0f       	add	r27, r27
 6aa:	40 f4       	brcc	.+16     	; 0x6bc <__fp_round+0x20>
 6ac:	bf 2b       	or	r27, r31
 6ae:	11 f4       	brne	.+4      	; 0x6b4 <__fp_round+0x18>
 6b0:	60 ff       	sbrs	r22, 0
 6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__fp_round+0x20>
 6b4:	6f 5f       	subi	r22, 0xFF	; 255
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ba:	9f 4f       	sbci	r25, 0xFF	; 255
 6bc:	08 95       	ret

000006be <__fp_split3>:
 6be:	57 fd       	sbrc	r21, 7
 6c0:	90 58       	subi	r25, 0x80	; 128
 6c2:	44 0f       	add	r20, r20
 6c4:	55 1f       	adc	r21, r21
 6c6:	59 f0       	breq	.+22     	; 0x6de <__fp_splitA+0x10>
 6c8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ca:	71 f0       	breq	.+28     	; 0x6e8 <__fp_splitA+0x1a>
 6cc:	47 95       	ror	r20

000006ce <__fp_splitA>:
 6ce:	88 0f       	add	r24, r24
 6d0:	97 fb       	bst	r25, 7
 6d2:	99 1f       	adc	r25, r25
 6d4:	61 f0       	breq	.+24     	; 0x6ee <__fp_splitA+0x20>
 6d6:	9f 3f       	cpi	r25, 0xFF	; 255
 6d8:	79 f0       	breq	.+30     	; 0x6f8 <__fp_splitA+0x2a>
 6da:	87 95       	ror	r24
 6dc:	08 95       	ret
 6de:	12 16       	cp	r1, r18
 6e0:	13 06       	cpc	r1, r19
 6e2:	14 06       	cpc	r1, r20
 6e4:	55 1f       	adc	r21, r21
 6e6:	f2 cf       	rjmp	.-28     	; 0x6cc <__fp_split3+0xe>
 6e8:	46 95       	lsr	r20
 6ea:	f1 df       	rcall	.-30     	; 0x6ce <__fp_splitA>
 6ec:	08 c0       	rjmp	.+16     	; 0x6fe <__fp_splitA+0x30>
 6ee:	16 16       	cp	r1, r22
 6f0:	17 06       	cpc	r1, r23
 6f2:	18 06       	cpc	r1, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	f1 cf       	rjmp	.-30     	; 0x6da <__fp_splitA+0xc>
 6f8:	86 95       	lsr	r24
 6fa:	71 05       	cpc	r23, r1
 6fc:	61 05       	cpc	r22, r1
 6fe:	08 94       	sec
 700:	08 95       	ret

00000702 <__fp_zero>:
 702:	e8 94       	clt

00000704 <__fp_szero>:
 704:	bb 27       	eor	r27, r27
 706:	66 27       	eor	r22, r22
 708:	77 27       	eor	r23, r23
 70a:	cb 01       	movw	r24, r22
 70c:	97 f9       	bld	r25, 7
 70e:	08 95       	ret

00000710 <__gesf2>:
 710:	66 d0       	rcall	.+204    	; 0x7de <__fp_cmp>
 712:	08 f4       	brcc	.+2      	; 0x716 <__gesf2+0x6>
 714:	8f ef       	ldi	r24, 0xFF	; 255
 716:	08 95       	ret

00000718 <__mulsf3>:
 718:	0b d0       	rcall	.+22     	; 0x730 <__mulsf3x>
 71a:	c0 cf       	rjmp	.-128    	; 0x69c <__fp_round>
 71c:	b1 df       	rcall	.-158    	; 0x680 <__fp_pscA>
 71e:	28 f0       	brcs	.+10     	; 0x72a <__mulsf3+0x12>
 720:	b6 df       	rcall	.-148    	; 0x68e <__fp_pscB>
 722:	18 f0       	brcs	.+6      	; 0x72a <__mulsf3+0x12>
 724:	95 23       	and	r25, r21
 726:	09 f0       	breq	.+2      	; 0x72a <__mulsf3+0x12>
 728:	a2 cf       	rjmp	.-188    	; 0x66e <__fp_inf>
 72a:	a7 cf       	rjmp	.-178    	; 0x67a <__fp_nan>
 72c:	11 24       	eor	r1, r1
 72e:	ea cf       	rjmp	.-44     	; 0x704 <__fp_szero>

00000730 <__mulsf3x>:
 730:	c6 df       	rcall	.-116    	; 0x6be <__fp_split3>
 732:	a0 f3       	brcs	.-24     	; 0x71c <__mulsf3+0x4>

00000734 <__mulsf3_pse>:
 734:	95 9f       	mul	r25, r21
 736:	d1 f3       	breq	.-12     	; 0x72c <__mulsf3+0x14>
 738:	95 0f       	add	r25, r21
 73a:	50 e0       	ldi	r21, 0x00	; 0
 73c:	55 1f       	adc	r21, r21
 73e:	62 9f       	mul	r22, r18
 740:	f0 01       	movw	r30, r0
 742:	72 9f       	mul	r23, r18
 744:	bb 27       	eor	r27, r27
 746:	f0 0d       	add	r31, r0
 748:	b1 1d       	adc	r27, r1
 74a:	63 9f       	mul	r22, r19
 74c:	aa 27       	eor	r26, r26
 74e:	f0 0d       	add	r31, r0
 750:	b1 1d       	adc	r27, r1
 752:	aa 1f       	adc	r26, r26
 754:	64 9f       	mul	r22, r20
 756:	66 27       	eor	r22, r22
 758:	b0 0d       	add	r27, r0
 75a:	a1 1d       	adc	r26, r1
 75c:	66 1f       	adc	r22, r22
 75e:	82 9f       	mul	r24, r18
 760:	22 27       	eor	r18, r18
 762:	b0 0d       	add	r27, r0
 764:	a1 1d       	adc	r26, r1
 766:	62 1f       	adc	r22, r18
 768:	73 9f       	mul	r23, r19
 76a:	b0 0d       	add	r27, r0
 76c:	a1 1d       	adc	r26, r1
 76e:	62 1f       	adc	r22, r18
 770:	83 9f       	mul	r24, r19
 772:	a0 0d       	add	r26, r0
 774:	61 1d       	adc	r22, r1
 776:	22 1f       	adc	r18, r18
 778:	74 9f       	mul	r23, r20
 77a:	33 27       	eor	r19, r19
 77c:	a0 0d       	add	r26, r0
 77e:	61 1d       	adc	r22, r1
 780:	23 1f       	adc	r18, r19
 782:	84 9f       	mul	r24, r20
 784:	60 0d       	add	r22, r0
 786:	21 1d       	adc	r18, r1
 788:	82 2f       	mov	r24, r18
 78a:	76 2f       	mov	r23, r22
 78c:	6a 2f       	mov	r22, r26
 78e:	11 24       	eor	r1, r1
 790:	9f 57       	subi	r25, 0x7F	; 127
 792:	50 40       	sbci	r21, 0x00	; 0
 794:	8a f0       	brmi	.+34     	; 0x7b8 <__mulsf3_pse+0x84>
 796:	e1 f0       	breq	.+56     	; 0x7d0 <__mulsf3_pse+0x9c>
 798:	88 23       	and	r24, r24
 79a:	4a f0       	brmi	.+18     	; 0x7ae <__mulsf3_pse+0x7a>
 79c:	ee 0f       	add	r30, r30
 79e:	ff 1f       	adc	r31, r31
 7a0:	bb 1f       	adc	r27, r27
 7a2:	66 1f       	adc	r22, r22
 7a4:	77 1f       	adc	r23, r23
 7a6:	88 1f       	adc	r24, r24
 7a8:	91 50       	subi	r25, 0x01	; 1
 7aa:	50 40       	sbci	r21, 0x00	; 0
 7ac:	a9 f7       	brne	.-22     	; 0x798 <__mulsf3_pse+0x64>
 7ae:	9e 3f       	cpi	r25, 0xFE	; 254
 7b0:	51 05       	cpc	r21, r1
 7b2:	70 f0       	brcs	.+28     	; 0x7d0 <__mulsf3_pse+0x9c>
 7b4:	5c cf       	rjmp	.-328    	; 0x66e <__fp_inf>
 7b6:	a6 cf       	rjmp	.-180    	; 0x704 <__fp_szero>
 7b8:	5f 3f       	cpi	r21, 0xFF	; 255
 7ba:	ec f3       	brlt	.-6      	; 0x7b6 <__mulsf3_pse+0x82>
 7bc:	98 3e       	cpi	r25, 0xE8	; 232
 7be:	dc f3       	brlt	.-10     	; 0x7b6 <__mulsf3_pse+0x82>
 7c0:	86 95       	lsr	r24
 7c2:	77 95       	ror	r23
 7c4:	67 95       	ror	r22
 7c6:	b7 95       	ror	r27
 7c8:	f7 95       	ror	r31
 7ca:	e7 95       	ror	r30
 7cc:	9f 5f       	subi	r25, 0xFF	; 255
 7ce:	c1 f7       	brne	.-16     	; 0x7c0 <__mulsf3_pse+0x8c>
 7d0:	fe 2b       	or	r31, r30
 7d2:	88 0f       	add	r24, r24
 7d4:	91 1d       	adc	r25, r1
 7d6:	96 95       	lsr	r25
 7d8:	87 95       	ror	r24
 7da:	97 f9       	bld	r25, 7
 7dc:	08 95       	ret

000007de <__fp_cmp>:
 7de:	99 0f       	add	r25, r25
 7e0:	00 08       	sbc	r0, r0
 7e2:	55 0f       	add	r21, r21
 7e4:	aa 0b       	sbc	r26, r26
 7e6:	e0 e8       	ldi	r30, 0x80	; 128
 7e8:	fe ef       	ldi	r31, 0xFE	; 254
 7ea:	16 16       	cp	r1, r22
 7ec:	17 06       	cpc	r1, r23
 7ee:	e8 07       	cpc	r30, r24
 7f0:	f9 07       	cpc	r31, r25
 7f2:	c0 f0       	brcs	.+48     	; 0x824 <__fp_cmp+0x46>
 7f4:	12 16       	cp	r1, r18
 7f6:	13 06       	cpc	r1, r19
 7f8:	e4 07       	cpc	r30, r20
 7fa:	f5 07       	cpc	r31, r21
 7fc:	98 f0       	brcs	.+38     	; 0x824 <__fp_cmp+0x46>
 7fe:	62 1b       	sub	r22, r18
 800:	73 0b       	sbc	r23, r19
 802:	84 0b       	sbc	r24, r20
 804:	95 0b       	sbc	r25, r21
 806:	39 f4       	brne	.+14     	; 0x816 <__fp_cmp+0x38>
 808:	0a 26       	eor	r0, r26
 80a:	61 f0       	breq	.+24     	; 0x824 <__fp_cmp+0x46>
 80c:	23 2b       	or	r18, r19
 80e:	24 2b       	or	r18, r20
 810:	25 2b       	or	r18, r21
 812:	21 f4       	brne	.+8      	; 0x81c <__fp_cmp+0x3e>
 814:	08 95       	ret
 816:	0a 26       	eor	r0, r26
 818:	09 f4       	brne	.+2      	; 0x81c <__fp_cmp+0x3e>
 81a:	a1 40       	sbci	r26, 0x01	; 1
 81c:	a6 95       	lsr	r26
 81e:	8f ef       	ldi	r24, 0xFF	; 255
 820:	81 1d       	adc	r24, r1
 822:	81 1d       	adc	r24, r1
 824:	08 95       	ret

00000826 <_exit>:
 826:	f8 94       	cli

00000828 <__stop_program>:
 828:	ff cf       	rjmp	.-2      	; 0x828 <__stop_program>
