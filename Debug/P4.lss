
P4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000542  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800200  00800200  00000542  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000542  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000574  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e51  00000000  00000000  00000604  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cc2  00000000  00000000  00001455  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000043b  00000000  00000000  00002117  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000fc  00000000  00000000  00002554  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000601  00000000  00000000  00002650  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001b2  00000000  00000000  00002c51  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002e03  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	bd c0       	rjmp	.+378    	; 0x180 <__vector_1>
   6:	00 00       	nop
   8:	d9 c0       	rjmp	.+434    	; 0x1bc <__vector_2>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	f4 c0       	rjmp	.+488    	; 0x23e <__vector_21>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee ec       	ldi	r30, 0xCE	; 206
  fc:	f4 e0       	ldi	r31, 0x04	; 4
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a9 30       	cpi	r26, 0x09	; 9
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	17 d0       	rcall	.+46     	; 0x14e <main>
 120:	d4 c1       	rjmp	.+936    	; 0x4ca <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <Timer_Setup>:
	EICRA = (1<<ISC11)|(1<<ISC10)|(1<<ISC01)|(1<<ISC00);		// Rising edge of INT0 and INT1 generate an interrupt request
	EIMSK = (1<<INT1)|(1<<INT0);								// Interrupt mask for INT0 and INT1 disabled
}

void Led_Output(float input)
{
 124:	82 e8       	ldi	r24, 0x82	; 130
 126:	84 bd       	out	0x24, r24	; 36
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
 12e:	80 e8       	ldi	r24, 0x80	; 128
 130:	87 bd       	out	0x27, r24	; 39
 132:	08 95       	ret

00000134 <System_Init>:
 134:	80 ee       	ldi	r24, 0xE0	; 224
 136:	81 b9       	out	0x01, r24	; 1
 138:	8a b1       	in	r24, 0x0a	; 10
 13a:	8d 7f       	andi	r24, 0xFD	; 253
 13c:	8a b9       	out	0x0a, r24	; 10
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	87 b9       	out	0x07, r24	; 7
 142:	8f e0       	ldi	r24, 0x0F	; 15
 144:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
 148:	83 e0       	ldi	r24, 0x03	; 3
 14a:	8d bb       	out	0x1d, r24	; 29
 14c:	08 95       	ret

0000014e <main>:
	
}

int main(void)
{
	System_Init();
 14e:	f2 df       	rcall	.-28     	; 0x134 <System_Init>
	Timer_Setup();
 150:	e9 df       	rcall	.-46     	; 0x124 <Timer_Setup>
 152:	78 94       	sei
	sei();
 154:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <fsmState>

	while (1) 
	{
			if (fsmState!=lap)
 158:	83 30       	cpi	r24, 0x03	; 3
 15a:	49 f0       	breq	.+18     	; 0x16e <main+0x20>
 15c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
			{
				Led_Output(counter);									// Displays actual count
 160:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 164:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <counter+0x2>
 168:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <counter+0x3>
 16c:	f3 cf       	rjmp	.-26     	; 0x154 <main+0x6>
 16e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
			}
			else {
				Led_Output(auxcounter);									// Displays count before lap state
 172:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 176:	a0 91 02 02 	lds	r26, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 17a:	b0 91 03 02 	lds	r27, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 17e:	ea cf       	rjmp	.-44     	; 0x154 <main+0x6>

00000180 <__vector_1>:
 180:	1f 92       	push	r1
			}
	}
}

ISR(INT0_vect)
{
 182:	0f 92       	push	r0
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	0f 92       	push	r0
 188:	11 24       	eor	r1, r1
 18a:	8f 93       	push	r24
	if(fsmState==zero)
 18c:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <fsmState>
 190:	81 11       	cpse	r24, r1
 192:	05 c0       	rjmp	.+10     	; 0x19e <__vector_1+0x1e>
	{
		fsmState=start;
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <fsmState>
		TCCR0B = (1<<CS00);										// Prescaler=0, counter starts
 19a:	85 bd       	out	0x25, r24	; 37
 19c:	09 c0       	rjmp	.+18     	; 0x1b0 <__vector_1+0x30>
	}																
	else
	{
		if (fsmState==start)
 19e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <fsmState>
 1a2:	81 30       	cpi	r24, 0x01	; 1
 1a4:	29 f4       	brne	.+10     	; 0x1b0 <__vector_1+0x30>
		{
			fsmState=stop;
 1a6:	82 e0       	ldi	r24, 0x02	; 2
 1a8:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <fsmState>
			TCCR0B&=0x00;										// Counter is stopped
 1ac:	85 b5       	in	r24, 0x25	; 37
 1ae:	15 bc       	out	0x25, r1	; 37
		}
	}
}
 1b0:	8f 91       	pop	r24
 1b2:	0f 90       	pop	r0
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	0f 90       	pop	r0
 1b8:	1f 90       	pop	r1
 1ba:	18 95       	reti

000001bc <__vector_2>:

ISR(INT1_vect)
{
 1bc:	1f 92       	push	r1
 1be:	0f 92       	push	r0
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	0f 92       	push	r0
 1c4:	11 24       	eor	r1, r1
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
	if (fsmState==stop)
 1ce:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <fsmState>
 1d2:	82 30       	cpi	r24, 0x02	; 2
 1d4:	61 f4       	brne	.+24     	; 0x1ee <__vector_2+0x32>
	{
		fsmState=zero;
 1d6:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <fsmState>
		TCNT0=0x00;
 1da:	16 bc       	out	0x26, r1	; 38
		counter=0;
 1dc:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <counter>
 1e0:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <counter+0x1>
 1e4:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <counter+0x2>
 1e8:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <counter+0x3>
 1ec:	1f c0       	rjmp	.+62     	; 0x22c <__vector_2+0x70>
	}
	else
	{
		if (fsmState==start)
 1ee:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <fsmState>
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	a1 f4       	brne	.+40     	; 0x21e <__vector_2+0x62>
		{
			fsmState=lap;
 1f6:	83 e0       	ldi	r24, 0x03	; 3
 1f8:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <fsmState>
			auxcounter=counter;
 1fc:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
 200:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 204:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <counter+0x2>
 208:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <counter+0x3>
 20c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
 210:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 214:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
 218:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
 21c:	07 c0       	rjmp	.+14     	; 0x22c <__vector_2+0x70>
		}
		else
		{
			if (fsmState==lap)
 21e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <fsmState>
 222:	83 30       	cpi	r24, 0x03	; 3
 224:	19 f4       	brne	.+6      	; 0x22c <__vector_2+0x70>
			{
				fsmState=start;
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <fsmState>
			}
		}
	}
}
 22c:	bf 91       	pop	r27
 22e:	af 91       	pop	r26
 230:	9f 91       	pop	r25
 232:	8f 91       	pop	r24
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 23e:	1f 92       	push	r1
 240:	0f 92       	push	r0
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	0f 92       	push	r0
 246:	11 24       	eor	r1, r1
 248:	0b b6       	in	r0, 0x3b	; 59
 24a:	0f 92       	push	r0
 24c:	2f 93       	push	r18
 24e:	3f 93       	push	r19
 250:	4f 93       	push	r20
 252:	5f 93       	push	r21
 254:	6f 93       	push	r22
 256:	7f 93       	push	r23
 258:	8f 93       	push	r24
 25a:	9f 93       	push	r25
 25c:	af 93       	push	r26
 25e:	bf 93       	push	r27
 260:	ef 93       	push	r30
 262:	ff 93       	push	r31
	counter=counter+0.1;
 264:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <counter>
 268:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <counter+0x1>
 26c:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <counter+0x2>
 270:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <counter+0x3>
 274:	2d ec       	ldi	r18, 0xCD	; 205
 276:	3c ec       	ldi	r19, 0xCC	; 204
 278:	4c ec       	ldi	r20, 0xCC	; 204
 27a:	5d e3       	ldi	r21, 0x3D	; 61
 27c:	49 d0       	rcall	.+146    	; 0x310 <__addsf3>
 27e:	60 93 04 02 	sts	0x0204, r22	; 0x800204 <counter>
 282:	70 93 05 02 	sts	0x0205, r23	; 0x800205 <counter+0x1>
 286:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <counter+0x2>
 28a:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <counter+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	81 ee       	ldi	r24, 0xE1	; 225
 292:	94 e0       	ldi	r25, 0x04	; 4
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <__vector_21+0x56>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <__vector_21+0x60>
 29e:	00 00       	nop
	_delay_ms(100);
	if (counter>=60.0)
 2a0:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <counter>
 2a4:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <counter+0x1>
 2a8:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <counter+0x2>
 2ac:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <counter+0x3>
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	40 e7       	ldi	r20, 0x70	; 112
 2b6:	52 e4       	ldi	r21, 0x42	; 66
 2b8:	e0 d0       	rcall	.+448    	; 0x47a <__gesf2>
 2ba:	88 23       	and	r24, r24
 2bc:	ac f0       	brlt	.+42     	; 0x2e8 <__vector_21+0xaa>
	{
		counter=counter-60.0;
 2be:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <counter>
 2c2:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <counter+0x1>
 2c6:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <counter+0x2>
 2ca:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <counter+0x3>
 2ce:	20 e0       	ldi	r18, 0x00	; 0
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	40 e7       	ldi	r20, 0x70	; 112
 2d4:	52 e4       	ldi	r21, 0x42	; 66
 2d6:	1b d0       	rcall	.+54     	; 0x30e <__subsf3>
 2d8:	60 93 04 02 	sts	0x0204, r22	; 0x800204 <counter>
 2dc:	70 93 05 02 	sts	0x0205, r23	; 0x800205 <counter+0x1>
 2e0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <counter+0x2>
 2e4:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <counter+0x3>
	}
}
 2e8:	ff 91       	pop	r31
 2ea:	ef 91       	pop	r30
 2ec:	bf 91       	pop	r27
 2ee:	af 91       	pop	r26
 2f0:	9f 91       	pop	r25
 2f2:	8f 91       	pop	r24
 2f4:	7f 91       	pop	r23
 2f6:	6f 91       	pop	r22
 2f8:	5f 91       	pop	r21
 2fa:	4f 91       	pop	r20
 2fc:	3f 91       	pop	r19
 2fe:	2f 91       	pop	r18
 300:	0f 90       	pop	r0
 302:	0b be       	out	0x3b, r0	; 59
 304:	0f 90       	pop	r0
 306:	0f be       	out	0x3f, r0	; 63
 308:	0f 90       	pop	r0
 30a:	1f 90       	pop	r1
 30c:	18 95       	reti

0000030e <__subsf3>:
 30e:	50 58       	subi	r21, 0x80	; 128

00000310 <__addsf3>:
 310:	bb 27       	eor	r27, r27
 312:	aa 27       	eor	r26, r26
 314:	0e d0       	rcall	.+28     	; 0x332 <__addsf3x>
 316:	77 c0       	rjmp	.+238    	; 0x406 <__fp_round>
 318:	68 d0       	rcall	.+208    	; 0x3ea <__fp_pscA>
 31a:	30 f0       	brcs	.+12     	; 0x328 <__addsf3+0x18>
 31c:	6d d0       	rcall	.+218    	; 0x3f8 <__fp_pscB>
 31e:	20 f0       	brcs	.+8      	; 0x328 <__addsf3+0x18>
 320:	31 f4       	brne	.+12     	; 0x32e <__addsf3+0x1e>
 322:	9f 3f       	cpi	r25, 0xFF	; 255
 324:	11 f4       	brne	.+4      	; 0x32a <__addsf3+0x1a>
 326:	1e f4       	brtc	.+6      	; 0x32e <__addsf3+0x1e>
 328:	5d c0       	rjmp	.+186    	; 0x3e4 <__fp_nan>
 32a:	0e f4       	brtc	.+2      	; 0x32e <__addsf3+0x1e>
 32c:	e0 95       	com	r30
 32e:	e7 fb       	bst	r30, 7
 330:	53 c0       	rjmp	.+166    	; 0x3d8 <__fp_inf>

00000332 <__addsf3x>:
 332:	e9 2f       	mov	r30, r25
 334:	79 d0       	rcall	.+242    	; 0x428 <__fp_split3>
 336:	80 f3       	brcs	.-32     	; 0x318 <__addsf3+0x8>
 338:	ba 17       	cp	r27, r26
 33a:	62 07       	cpc	r22, r18
 33c:	73 07       	cpc	r23, r19
 33e:	84 07       	cpc	r24, r20
 340:	95 07       	cpc	r25, r21
 342:	18 f0       	brcs	.+6      	; 0x34a <__addsf3x+0x18>
 344:	71 f4       	brne	.+28     	; 0x362 <__addsf3x+0x30>
 346:	9e f5       	brtc	.+102    	; 0x3ae <__addsf3x+0x7c>
 348:	91 c0       	rjmp	.+290    	; 0x46c <__fp_zero>
 34a:	0e f4       	brtc	.+2      	; 0x34e <__addsf3x+0x1c>
 34c:	e0 95       	com	r30
 34e:	0b 2e       	mov	r0, r27
 350:	ba 2f       	mov	r27, r26
 352:	a0 2d       	mov	r26, r0
 354:	0b 01       	movw	r0, r22
 356:	b9 01       	movw	r22, r18
 358:	90 01       	movw	r18, r0
 35a:	0c 01       	movw	r0, r24
 35c:	ca 01       	movw	r24, r20
 35e:	a0 01       	movw	r20, r0
 360:	11 24       	eor	r1, r1
 362:	ff 27       	eor	r31, r31
 364:	59 1b       	sub	r21, r25
 366:	99 f0       	breq	.+38     	; 0x38e <__addsf3x+0x5c>
 368:	59 3f       	cpi	r21, 0xF9	; 249
 36a:	50 f4       	brcc	.+20     	; 0x380 <__addsf3x+0x4e>
 36c:	50 3e       	cpi	r21, 0xE0	; 224
 36e:	68 f1       	brcs	.+90     	; 0x3ca <__addsf3x+0x98>
 370:	1a 16       	cp	r1, r26
 372:	f0 40       	sbci	r31, 0x00	; 0
 374:	a2 2f       	mov	r26, r18
 376:	23 2f       	mov	r18, r19
 378:	34 2f       	mov	r19, r20
 37a:	44 27       	eor	r20, r20
 37c:	58 5f       	subi	r21, 0xF8	; 248
 37e:	f3 cf       	rjmp	.-26     	; 0x366 <__addsf3x+0x34>
 380:	46 95       	lsr	r20
 382:	37 95       	ror	r19
 384:	27 95       	ror	r18
 386:	a7 95       	ror	r26
 388:	f0 40       	sbci	r31, 0x00	; 0
 38a:	53 95       	inc	r21
 38c:	c9 f7       	brne	.-14     	; 0x380 <__addsf3x+0x4e>
 38e:	7e f4       	brtc	.+30     	; 0x3ae <__addsf3x+0x7c>
 390:	1f 16       	cp	r1, r31
 392:	ba 0b       	sbc	r27, r26
 394:	62 0b       	sbc	r22, r18
 396:	73 0b       	sbc	r23, r19
 398:	84 0b       	sbc	r24, r20
 39a:	ba f0       	brmi	.+46     	; 0x3ca <__addsf3x+0x98>
 39c:	91 50       	subi	r25, 0x01	; 1
 39e:	a1 f0       	breq	.+40     	; 0x3c8 <__addsf3x+0x96>
 3a0:	ff 0f       	add	r31, r31
 3a2:	bb 1f       	adc	r27, r27
 3a4:	66 1f       	adc	r22, r22
 3a6:	77 1f       	adc	r23, r23
 3a8:	88 1f       	adc	r24, r24
 3aa:	c2 f7       	brpl	.-16     	; 0x39c <__addsf3x+0x6a>
 3ac:	0e c0       	rjmp	.+28     	; 0x3ca <__addsf3x+0x98>
 3ae:	ba 0f       	add	r27, r26
 3b0:	62 1f       	adc	r22, r18
 3b2:	73 1f       	adc	r23, r19
 3b4:	84 1f       	adc	r24, r20
 3b6:	48 f4       	brcc	.+18     	; 0x3ca <__addsf3x+0x98>
 3b8:	87 95       	ror	r24
 3ba:	77 95       	ror	r23
 3bc:	67 95       	ror	r22
 3be:	b7 95       	ror	r27
 3c0:	f7 95       	ror	r31
 3c2:	9e 3f       	cpi	r25, 0xFE	; 254
 3c4:	08 f0       	brcs	.+2      	; 0x3c8 <__addsf3x+0x96>
 3c6:	b3 cf       	rjmp	.-154    	; 0x32e <__addsf3+0x1e>
 3c8:	93 95       	inc	r25
 3ca:	88 0f       	add	r24, r24
 3cc:	08 f0       	brcs	.+2      	; 0x3d0 <__addsf3x+0x9e>
 3ce:	99 27       	eor	r25, r25
 3d0:	ee 0f       	add	r30, r30
 3d2:	97 95       	ror	r25
 3d4:	87 95       	ror	r24
 3d6:	08 95       	ret

000003d8 <__fp_inf>:
 3d8:	97 f9       	bld	r25, 7
 3da:	9f 67       	ori	r25, 0x7F	; 127
 3dc:	80 e8       	ldi	r24, 0x80	; 128
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	60 e0       	ldi	r22, 0x00	; 0
 3e2:	08 95       	ret

000003e4 <__fp_nan>:
 3e4:	9f ef       	ldi	r25, 0xFF	; 255
 3e6:	80 ec       	ldi	r24, 0xC0	; 192
 3e8:	08 95       	ret

000003ea <__fp_pscA>:
 3ea:	00 24       	eor	r0, r0
 3ec:	0a 94       	dec	r0
 3ee:	16 16       	cp	r1, r22
 3f0:	17 06       	cpc	r1, r23
 3f2:	18 06       	cpc	r1, r24
 3f4:	09 06       	cpc	r0, r25
 3f6:	08 95       	ret

000003f8 <__fp_pscB>:
 3f8:	00 24       	eor	r0, r0
 3fa:	0a 94       	dec	r0
 3fc:	12 16       	cp	r1, r18
 3fe:	13 06       	cpc	r1, r19
 400:	14 06       	cpc	r1, r20
 402:	05 06       	cpc	r0, r21
 404:	08 95       	ret

00000406 <__fp_round>:
 406:	09 2e       	mov	r0, r25
 408:	03 94       	inc	r0
 40a:	00 0c       	add	r0, r0
 40c:	11 f4       	brne	.+4      	; 0x412 <__fp_round+0xc>
 40e:	88 23       	and	r24, r24
 410:	52 f0       	brmi	.+20     	; 0x426 <__fp_round+0x20>
 412:	bb 0f       	add	r27, r27
 414:	40 f4       	brcc	.+16     	; 0x426 <__fp_round+0x20>
 416:	bf 2b       	or	r27, r31
 418:	11 f4       	brne	.+4      	; 0x41e <__fp_round+0x18>
 41a:	60 ff       	sbrs	r22, 0
 41c:	04 c0       	rjmp	.+8      	; 0x426 <__fp_round+0x20>
 41e:	6f 5f       	subi	r22, 0xFF	; 255
 420:	7f 4f       	sbci	r23, 0xFF	; 255
 422:	8f 4f       	sbci	r24, 0xFF	; 255
 424:	9f 4f       	sbci	r25, 0xFF	; 255
 426:	08 95       	ret

00000428 <__fp_split3>:
 428:	57 fd       	sbrc	r21, 7
 42a:	90 58       	subi	r25, 0x80	; 128
 42c:	44 0f       	add	r20, r20
 42e:	55 1f       	adc	r21, r21
 430:	59 f0       	breq	.+22     	; 0x448 <__fp_splitA+0x10>
 432:	5f 3f       	cpi	r21, 0xFF	; 255
 434:	71 f0       	breq	.+28     	; 0x452 <__fp_splitA+0x1a>
 436:	47 95       	ror	r20

00000438 <__fp_splitA>:
 438:	88 0f       	add	r24, r24
 43a:	97 fb       	bst	r25, 7
 43c:	99 1f       	adc	r25, r25
 43e:	61 f0       	breq	.+24     	; 0x458 <__fp_splitA+0x20>
 440:	9f 3f       	cpi	r25, 0xFF	; 255
 442:	79 f0       	breq	.+30     	; 0x462 <__fp_splitA+0x2a>
 444:	87 95       	ror	r24
 446:	08 95       	ret
 448:	12 16       	cp	r1, r18
 44a:	13 06       	cpc	r1, r19
 44c:	14 06       	cpc	r1, r20
 44e:	55 1f       	adc	r21, r21
 450:	f2 cf       	rjmp	.-28     	; 0x436 <__fp_split3+0xe>
 452:	46 95       	lsr	r20
 454:	f1 df       	rcall	.-30     	; 0x438 <__fp_splitA>
 456:	08 c0       	rjmp	.+16     	; 0x468 <__fp_splitA+0x30>
 458:	16 16       	cp	r1, r22
 45a:	17 06       	cpc	r1, r23
 45c:	18 06       	cpc	r1, r24
 45e:	99 1f       	adc	r25, r25
 460:	f1 cf       	rjmp	.-30     	; 0x444 <__fp_splitA+0xc>
 462:	86 95       	lsr	r24
 464:	71 05       	cpc	r23, r1
 466:	61 05       	cpc	r22, r1
 468:	08 94       	sec
 46a:	08 95       	ret

0000046c <__fp_zero>:
 46c:	e8 94       	clt

0000046e <__fp_szero>:
 46e:	bb 27       	eor	r27, r27
 470:	66 27       	eor	r22, r22
 472:	77 27       	eor	r23, r23
 474:	cb 01       	movw	r24, r22
 476:	97 f9       	bld	r25, 7
 478:	08 95       	ret

0000047a <__gesf2>:
 47a:	03 d0       	rcall	.+6      	; 0x482 <__fp_cmp>
 47c:	08 f4       	brcc	.+2      	; 0x480 <__gesf2+0x6>
 47e:	8f ef       	ldi	r24, 0xFF	; 255
 480:	08 95       	ret

00000482 <__fp_cmp>:
 482:	99 0f       	add	r25, r25
 484:	00 08       	sbc	r0, r0
 486:	55 0f       	add	r21, r21
 488:	aa 0b       	sbc	r26, r26
 48a:	e0 e8       	ldi	r30, 0x80	; 128
 48c:	fe ef       	ldi	r31, 0xFE	; 254
 48e:	16 16       	cp	r1, r22
 490:	17 06       	cpc	r1, r23
 492:	e8 07       	cpc	r30, r24
 494:	f9 07       	cpc	r31, r25
 496:	c0 f0       	brcs	.+48     	; 0x4c8 <__fp_cmp+0x46>
 498:	12 16       	cp	r1, r18
 49a:	13 06       	cpc	r1, r19
 49c:	e4 07       	cpc	r30, r20
 49e:	f5 07       	cpc	r31, r21
 4a0:	98 f0       	brcs	.+38     	; 0x4c8 <__fp_cmp+0x46>
 4a2:	62 1b       	sub	r22, r18
 4a4:	73 0b       	sbc	r23, r19
 4a6:	84 0b       	sbc	r24, r20
 4a8:	95 0b       	sbc	r25, r21
 4aa:	39 f4       	brne	.+14     	; 0x4ba <__fp_cmp+0x38>
 4ac:	0a 26       	eor	r0, r26
 4ae:	61 f0       	breq	.+24     	; 0x4c8 <__fp_cmp+0x46>
 4b0:	23 2b       	or	r18, r19
 4b2:	24 2b       	or	r18, r20
 4b4:	25 2b       	or	r18, r21
 4b6:	21 f4       	brne	.+8      	; 0x4c0 <__fp_cmp+0x3e>
 4b8:	08 95       	ret
 4ba:	0a 26       	eor	r0, r26
 4bc:	09 f4       	brne	.+2      	; 0x4c0 <__fp_cmp+0x3e>
 4be:	a1 40       	sbci	r26, 0x01	; 1
 4c0:	a6 95       	lsr	r26
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	81 1d       	adc	r24, r1
 4c6:	81 1d       	adc	r24, r1
 4c8:	08 95       	ret

000004ca <_exit>:
 4ca:	f8 94       	cli

000004cc <__stop_program>:
 4cc:	ff cf       	rjmp	.-2      	; 0x4cc <__stop_program>
